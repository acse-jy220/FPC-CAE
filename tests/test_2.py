import pytest
from sfc_cae import *
# from pytest import fixture

# # Use pytest fixtures to generate objects we know we'll reuse.
# # This makes sure tests run quickly

# @fixture(scope='module')

class TestHilbert(object):
    @pytest.mark.parametrize('hilbert_4, hilbert_8, hilbert_16', 
    [
        ([ 0,  1,  5,  4,  8, 12, 13,  9, 10, 14, 15, 11,  7,  6,  2,  3],
         [ 0 , 8 , 9 , 1 , 2 , 3 , 11 , 10 ,18 ,19 ,27 ,26 ,25, 17 ,16 ,24 ,32, 33, 41, 40 ,48 ,56 ,57, 49,
 50, 58, 59, 51, 43, 42, 34, 35 ,36, 37, 45, 44, 52, 60 ,61 ,53, 54, 62, 63 ,55, 47, 46 ,38, 39,
 31, 23, 22, 30 ,29, 28, 20, 21, 13, 12,  4 , 5 , 6 ,14, 15,  7], 
         [  0,   1,  17,  16,  32,  48,  49,  33,  34,  50,  51,  35,  19,
        18,   2,   3,   4,  20,  21,   5,   6,   7,  23,  22,  38,  39,
        55,  54,  53,  37,  36,  52,  68,  84,  85,  69,  70,  71,  87,
        86, 102, 103, 119, 118, 117, 101, 100, 116, 115, 114,  98,  99,
        83,  67,  66,  82,  81,  65,  64,  80,  96,  97, 113, 112, 128,
       144, 145, 129, 130, 131, 147, 146, 162, 163, 179, 178, 177, 161,
       160, 176, 192, 193, 209, 208, 224, 240, 241, 225, 226, 242, 243,
       227, 211, 210, 194, 195, 196, 197, 213, 212, 228, 244, 245, 229,
       230, 246, 247, 231, 215, 214, 198, 199, 183, 167, 166, 182, 181,
       180, 164, 165, 149, 148, 132, 133, 134, 150, 151, 135, 136, 152,
       153, 137, 138, 139, 155, 154, 170, 171, 187, 186, 185, 169, 168,
       184, 200, 201, 217, 216, 232, 248, 249, 233, 234, 250, 251, 235,
       219, 218, 202, 203, 204, 205, 221, 220, 236, 252, 253, 237, 238,
       254, 255, 239, 223, 222, 206, 207, 191, 175, 174, 190, 189, 188,
       172, 173, 157, 156, 140, 141, 142, 158, 159, 143, 127, 126, 110,
       111,  95,  79,  78,  94,  93,  77,  76,  92, 108, 109, 125, 124,
       123, 107, 106, 122, 121, 120, 104, 105,  89,  88,  72,  73,  74,
        90,  91,  75,  59,  43,  42,  58,  57,  56,  40,  41,  25,  24,
         8,   9,  10,  26,  27,  11,  12,  13,  29,  28,  44,  60,  61,
        45,  46,  62,  63,  47,  31,  30,  14,  15])
    ])
    def test_hilbert_order_generating(self, hilbert_4, hilbert_8, hilbert_16):
      h4 = hilbert_space_filling_curve(4)
      h8 = hilbert_space_filling_curve(8)
      h16 = hilbert_space_filling_curve(16)

      assert (h4 == hilbert_4).all()
      assert (h8 == hilbert_8).all()
      assert (h16 == hilbert_16).all()